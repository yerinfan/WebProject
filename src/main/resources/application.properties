# SERVER
server.port=8888

# H2 DATABASE 설정 (file 모드)
spring.datasource.url=jdbc:h2:file:./data/demo-db;DB_CLOSE_ON_EXIT=FALSE;AUTO_SERVER=TRUE
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver

# JPA 설정
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.defer-datasource-initialization=true

# 세션 쿠키를 cross-origin fetch에서 허용
server.servlet.session.cookie.same-site=none
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.domain=webproject-zty4.onrender.com

# H2 콘솔
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Thymeleaf
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# 파일 업로드 경로
file.upload-dir=uploads

# Spring Security 설정
spring.security.user.lives-on-default-properties=true

# 로깅
logging.level.kr.ac.kopo=DEBUG

# CORS 전역 설정
spring.web.cors.allow-credentials=true
spring.web.cors.allowed-origins=https://webproject-zty4.onrender.com
spring.web.cors.allowed-methods=POST,GET,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

# 항상 schema.sql → data.sql 순으로 실행
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:/schema.sql
spring.sql.init.data-locations=classpath:/data.sql

# JPA DDL 자동 실행은 disable
spring.jpa.hibernate.ddl-auto=none